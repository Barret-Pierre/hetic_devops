name: CD with Terraform
on:
  push:
    branches:
      - main
  workflow_run:
    workflows: ["CI with Python TestUnit"]
    types:
      - completed

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_SSH_KEY_NAME: ${{ secrets.AWS_SSH_KEY_NAME }}
  AWS_SSH_KEY_PRIVATE: ${{ secrets.AWS_SSH_KEY_PRIVATE }}
  AWS_VPC_SECURITY_GROUP_ID: ${{ secrets.AWS_VPC_SECURITY_GROUP_ID }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run tests
        run: cd app && python -m unittest test_script.py

  deploy-infra:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup terraform
        uses: hashicorp/setup-terraform@v3
      - name: Terraform Init
        id: init
        run: terraform init
      - name: Terraform Plan
        id: plan
        run: |-
          terraform plan \
          -var="key_name=$AWS_SSH_KEY_NAME" \
          -var="private_key=$AWS_SSH_KEY_PRIVATE" \
          -var="vpc_security_group_id=$AWS_VPC_SECURITY_GROUP_ID" \
          -out=PLAN
      - name: Terraform Apply
        id: apply
        run: terraform apply PLAN
